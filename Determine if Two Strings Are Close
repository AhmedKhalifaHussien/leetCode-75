class Solution {
public:
    bool closeStrings(string word1, string word2) {
        if(word1.size()!=word2.size())
            return 0;
        map<char,int>mp1,mp2;
        priority_queue<int>q1,q2;
        for(int i=0;i<word1.size();i++)
        {
            mp1[word1[i]]++;
            mp2[word2[i]]++;
        }
        bool check=0;
        for(auto it:mp1)
        {
            if(!mp2.count(it.first))
            {
                check=1;
                break;
            }
            q1.push(it.second);
        }
        if(check)
            return 0;
        for(auto it:mp2)
        {
            q2.push(it.second);
        }
        if(q1.size()==q2.size())
        {
            int cnt=q1.size();
            while(!q1.empty())
            {
                if(q1.top()==q2.top())
                {
                    cnt--;
                    q1.pop();q2.pop();
                }
                else {
                    break;
                }
            }
            if(cnt==0)
                return 1;
            return 0;
        }
        else{
            sort(word1.begin(),word1.end());
            sort(word2.begin(),word2.end());
            if(word1==word2)
                return 1;
            return 0;
        }
        
    }
};
